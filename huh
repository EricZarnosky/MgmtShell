#!/bin/bash

# huh - Tool version information display script
# Usage: huh [--app|-a <app_name>] [--help|-h]

VERSION="1.0.0"
SCRIPT_NAME="huh"

# Color codes for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
WHITE='\033[1;37m'
NC='\033[0m' # No Color

# Function to print colored output
print_color() {
    local color=$1
    local text=$2
    echo -e "${color}${text}${NC}"
}

# Function to print section header
print_header() {
    local title=$1
    echo
    print_color "$CYAN" "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
    print_color "$WHITE" "  $title"
    print_color "$CYAN" "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
}

# Function to get version safely
get_version() {
    local cmd=$1
    local version_flag=${2:-"--version"}
    
    if command -v "$cmd" >/dev/null 2>&1; then
        case $cmd in
            "python3")
                python3 --version 2>&1 | head -1
                ;;
            "pip3")
                pip3 --version 2>&1 | head -1
                ;;
            "go")
                go version 2>&1 | head -1
                ;;
            "node")
                node --version 2>&1 | head -1
                ;;
            "npm")
                npm --version 2>&1 | head -1
                ;;
            "pwsh")
                pwsh --version 2>&1 | head -1
                ;;
            *)
                $cmd $version_flag 2>&1 | head -1
                ;;
        esac
    else
        echo "Not installed"
    fi
}

# Function to get detailed app info
get_app_details() {
    local app=$1
    
    print_header "Detailed Information: $app"
    
    if ! command -v "$app" >/dev/null 2>&1; then
        print_color "$RED" "❌ $app is not installed or not in PATH"
        return 1
    fi
    
    print_color "$GREEN" "✅ $app is installed"
    echo
    
    # Basic info
    print_color "$YELLOW" "📍 Location:"
    which "$app" 2>/dev/null || echo "  Not found in PATH"
    echo
    
    print_color "$YELLOW" "📦 Version Information:"
    case $app in
        "kubectl")
            kubectl version --client --output=yaml 2>/dev/null || kubectl version --client 2>/dev/null
            ;;
        "helm")
            helm version 2>/dev/null
            ;;
        "terraform")
            terraform version 2>/dev/null
            ;;
        "k9s")
            k9s version 2>/dev/null
            ;;
        "talosctl")
            talosctl version --client 2>/dev/null
            ;;
        "docker")
            docker version --format "{{.Client.Version}}" 2>/dev/null
            echo "Docker API Version: $(docker version --format "{{.Client.APIVersion}}" 2>/dev/null)"
            ;;
        "go")
            go version 2>/dev/null
            echo "GOROOT: $(go env GOROOT 2>/dev/null)"
            echo "GOPATH: $(go env GOPATH 2>/dev/null)"
            ;;
        "python3")
            python3 --version 2>/dev/null
            echo "Python Path: $(which python3 2>/dev/null